{"version":3,"sources":["components/imageGalleryItem/imageGalleryItem.module.css","components/button/button.module.css","components/modal/modal.module.css","components/imageList/imageGallery.module.css","components/searchbar/searchBar.module.css","services/api.js","components/searchbar/Searchbar.jsx","components/imageGalleryItem/ImageGalleryItem.jsx","components/imageList/ImageGallery.jsx","components/button/Button.jsx","components/loader/Loader.jsx","components/modal/Modal.jsx","components/App.jsx","index.jsx"],"names":["module","exports","axios","defaults","baseURL","fetchImages","inputValue","imagePage","a","get","response","data","hits","Searchbar","onSubmit","className","s","e","preventDefault","target","elements","value","SearchForm","type","SearchFormButton","SearchFormButtonLabel","name","SearchFormInput","autoComplete","autoFocus","placeholder","ImageGalleryItem","imgSrc","tags","onImgClick","largeImageURL","src","alt","ImageGalleryItemImage","onClick","ImageGallery","images","map","webformatURL","id","Button","onLoadMore","wrapper","Spiner","color","height","width","timeout","Modal","closeModal","children","handleKeyDown","code","console","log","useEffect","window","addEventListener","removeEventListener","Overlay","currentTarget","App","useState","setInputValue","setImages","reqStatus","setReqStatus","setImagePage","openImgUrl","setOpenImgUrl","loadedImages","length","Error","newImagesArray","scrollTo","top","document","documentElement","scrollHeight","behavior","toast","error","getImages","showBtnLoadMore","autoClose","bigImgUrl","prevState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45bdbb6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"imageGalleryItem_ImageGalleryItem__2nKCI\",\"ImageGalleryItemImage\":\"imageGalleryItem_ImageGalleryItemImage__1cGqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__l6X__\",\"wrapper\":\"button_wrapper__rlc1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"modal_Overlay__2PQZK\",\"Modal\":\"modal_Modal__3qVwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"imageGallery_ImageGallery__8fzdc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"searchBar_Searchbar__3_jQr\",\"SearchForm\":\"searchBar_SearchForm__3Q7Mk\",\"SearchFormButton\":\"searchBar_SearchFormButton__DR4AK\",\"SearchFormButtonLabel\":\"searchBar_SearchFormButtonLabel__2AedN\",\"SearchFormInput\":\"searchBar_SearchFormInput__BxTWb\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nexport const fetchImages = async (inputValue, imagePage) => {\n  const URL_KEY = '21770963-1545f2c5612889ab40ecea89f';\n  const response = await axios.get(\n    `?image_type=photo&orientation=horizontal&q=${inputValue}&page=${imagePage}&per_page=12&key=${URL_KEY}`,\n  );\n\n  return response.data.hits;\n};\n","import PropTypes from 'prop-types';\nimport s from '../searchbar/searchBar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  return (\n    <header className={s.Searchbar}>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n\n          onSubmit(e.target.elements.inputValue.value);\n        }}\n        className={s.SearchForm}\n      >\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          name=\"inputValue\"\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from '../imageGalleryItem/imageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  imgSrc,\n  tags,\n  onImgClick,\n  largeImageURL,\n}) {\n  return (\n    <>\n      <li className={s.ImageGalleryItem}>\n        <img\n          src={imgSrc}\n          alt={tags}\n          className={s.ImageGalleryItemImage}\n          onClick={e => {\n            onImgClick(largeImageURL);\n          }}\n        />\n      </li>\n    </>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  imgSrc: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onImgClick: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from '../imageList/imageGallery.module.css';\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ images, onImgClick }) {\n  return (\n    <>\n      <ul className={s.ImageGallery}>\n        {images.map(({ webformatURL, id, tags, largeImageURL }) => (\n          <ImageGalleryItem\n            key={id}\n            imgSrc={webformatURL}\n            id={id}\n            tags={tags}\n            onImgClick={onImgClick}\n            largeImageURL={largeImageURL}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string,\n    }),\n  ).isRequired,\n  onImgClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from '../button/button.module.css';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <div className={s.wrapper}>\n      <button\n        className={s.Button}\n        type=\"button\"\n        data-action=\"load-more\"\n        onClick={e => onLoadMore(e)}\n      >\n        load-more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nexport default function Spiner() {\n  return (\n    <div className=\"wrapper\">\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={100}\n        width={300}\n        timeout={30000} //3 secs\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport s from '../modal/modal.module.css';\n\nexport default function Modal({ closeModal, children }) {\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      console.log(e.code);\n      closeModal();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <div\n      className={s.Overlay}\n      onClick={e => {\n        if (e.currentTarget === e.target) {\n          closeModal();\n        }\n      }}\n    >\n      <div className={s.Modal}>{children}</div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchImages } from '../services/api';\nimport Searchbar from './searchbar/Searchbar';\nimport ImageGallery from './imageList/ImageGallery';\nimport Button from './button/Button';\nimport Loader from './loader/Loader';\nimport Modal from './modal/Modal';\n\nexport default function App() {\n  const [inputValue, setInputValue] = useState(null);\n  const [images, setImages] = useState([]);\n  const [reqStatus, setReqStatus] = useState('idle');\n  const [imagePage, setImagePage] = useState(1);\n  const [openImgUrl, setOpenImgUrl] = useState(null);\n\n  useEffect(() => {\n    if (inputValue === null) return;\n    setReqStatus('loading');\n\n    async function getImages() {\n      try {\n        const loadedImages = await fetchImages(inputValue, imagePage);\n\n        if (loadedImages.length === 0) {\n          throw new Error();\n        }\n\n        const newImagesArray = [...images, ...loadedImages];\n        setImages(newImagesArray);\n        setReqStatus('idle');\n\n        if (imagePage > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      } catch (error) {\n        toast.error('There are not such images');\n        setReqStatus('rejected');\n      }\n    }\n    getImages();\n  }, [inputValue, imagePage]);\n\n  const handleFormSubmit = inputValue => {\n    setInputValue(inputValue);\n    setImagePage(1);\n    setImages([]);\n  };\n\n  const onImageClick = bigImgUrl => {\n    setOpenImgUrl(bigImgUrl);\n  };\n\n  const increseImagePage = () => {\n    setImagePage(prevState => prevState + 1);\n  };\n\n  const closeModal = () => {\n    setOpenImgUrl(null);\n  };\n\n  const showBtnLoadMore = reqStatus === 'idle' && images.length > 0;\n\n  return (\n    <div>\n      <ToastContainer autoClose={2000} />\n      {reqStatus === 'loading' && <Loader />}\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery images={images} onImgClick={onImageClick} />\n\n      {showBtnLoadMore && <Button onLoadMore={increseImagePage} />}\n      {openImgUrl && (\n        <Modal closeModal={closeModal}>\n          <img src={openImgUrl} alt=\"\" />\n        </Modal>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}